analysis_outputs overview
===========================

This folder stores artifacts generated by the analysis pipeline (`python -m src.analysis.run_pipeline`). Each run overwrites the existing contents so the most recent results are always available.

Subdirectories
--------------
figures/
    PNG visualizations that help inspect dataset characteristics and robustness probes.

    - label_distribution.png: bar chart comparing class counts for train vs. val splits.
    - train_pixel_histogram.png / val_pixel_histogram.png / test_pixel_histogram.png: pixel-intensity histograms for each split.
    - train_grid.png / val_grid.png / test_grid.png: image grids sampled per split for quick visual checks of quality and anomalies.
    - perturbations_train_*.png.png: panels showing original images alongside perturbations (noise, blur, contrast shifts) used in robustness probes.
    - latent_tsne.png: 2D t-SNE embedding of PCA-compressed features illustrating class separability.
    - flip_differences.png: histograms of pixel differences after horizontal/vertical flips (geometric invariance diagnostic).

reports/
    JSON summaries and pipeline log files that capture key metrics and execution details.

    - label_distribution.json: counts and proportions of each class in train and val splits.
    - train_image_summary.json / val_image_summary.json: aggregate pixel statistics (means, stds, min/max) per split.
    - train_missing_files.json / val_missing_files.json: lists of any label references without matching image files (should be empty if data is consistent).
    - latent_structure.json: metadata about the PCAâ†’t-SNE embedding (explained variance ratios).
    - pipeline.log: timestamped record of the latest pipeline execution.


    tables/
    CSV exports of structured metrics for downstream analysis in spreadsheets or notebooks.

    - label_distribution.csv: tabular class counts and percentages for train/val splits.
    - train_image_stats.csv / val_image_stats.csv: per-image pixel statistics (mean, std, min, max).
    - robustness_metrics.csv: PSNR and SSIM scores measuring how perturbations differ from the original images.
    - geometric_stats.csv: edge density and flip-difference metrics per sampled training image.

Regeneration
------------
Re-run the pipeline to refresh every artifact:
    source .venv/bin/activate
    python -m src.analysis.run_pipeline
